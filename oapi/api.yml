openapi: 3.1.0
info:
  title: todo-app API
  description: |-
    ## 概要
    - todo-appのAPI仕様書
servers:
  - url: http://localhost:3030
    description: ローカル開発環境
tags:
  - name: healthcheck
    description: 疎通確認エンドポイント
  - name: boards
    description: ボード関連エンドポイント
  - name: categories
    description: カテゴリ関連エンドポイント
  - name: items
    description: アイテム関連エンドポイント
paths:
  /health:
    get:
      summary: 疎通確認用エンドポイント
      description: |-
        ## 概要
        - APIサーバーの疎通確認を行う
      tags:
        - healthcheck
      operationId: healthCheck
      security: []
      responses:
        "200":
          description: Successfully connected
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/health_check"
        default:
          $ref: "#/components/responses/error_unexpected"
  /boards:
    get:
      summary: ボード一覧を取得するエンドポイント
      description: |-
        ## 概要
        - ボード一覧を取得する
      tags:
        - boards
      operationId: getBoards
      security: []
      responses:
        "200":
          description: 全てのボードを返す
          content:
            application/json:
              schema:
                $ref: "./responses/boards.yml"
        default:
          $ref: "./errors/unexpected.yml"
    post:
      summary: ボードを新規作成するエンドポイント
      description: |-
        ## 概要
        - ボードのタイトルを受け取り、新規作成したボード情報を返す
      tags:
        - boards
      operationId: createBoard
      security: []
      requestBody:
        description: 新規作成するボード
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                board_title:
                  type: string
                  description: 新規作成するボードのタイトル
                  example: UTTC
              required:
                - board_title
      responses:
        "201":
          description: Successfully create a new board
          content:
            application/json:
              schema:
                $ref: "./responses/board.yml"
        default:
          $ref: "./errors/unexpected.yml"
  /boards/{board_id}:
    put:
      summary: ボードタイトルを更新するエンドポイント
      description: |-
        ## 概要
        - ボードのタイトルを受け取り、更新したボード情報を返す
      tags:
        - boards
      operationId: updateBoard
      security: []
      requestBody:
        description: 更新するボード
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                board_title:
                  type: string
                  description: 更新するボードのタイトル
                  example: UTTC
              required:
                - board_title
      responses:
        "200":
          description: Successfully update a board
          content:
            application/json:
              schema:
                $ref: "./responses/board.yml"
        default:
          $ref: "./errors/unexpected.yml"
    delete:
      summary: ボードを削除するエンドポイント
      description: |-
        ## 概要
        - ボードIDを受け取り、ボードを削除する
      tags:
        - boards
      operationId: deleteBoard
      security: []
      responses:
        "204":
          description: Successfully delete a board
        default:
          $ref: "./errors/unexpected.yml"
  /categories/{board_id}:
    get:
      summary: 特定のボード内のカテゴリ一覧を取得するエンドポイント
      description: |-
        ## 概要
        - 特定のボード内のカテゴリ一覧を取得する
      tags:
        - categories
      operationId: getCategories
      security: []
      responses:
        "200":
          description: 特定のボード内のカテゴリを全て返す
          content:
            application/json:
              schema:
                $ref: "./responses/categories.yml"
        default:
          $ref: "./errors/unexpected.yml"
    post:
      summary: カテゴリを新規作成するエンドポイント
      description: |-
        ## 概要
        - カテゴリのタイトルを受け取り、新規作成したカテゴリ情報を返す
      tags:
        - categories
      operationId: createCategories
      security: []
      requestBody:
        description: 新規作成するカテゴリ
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_title:
                  type: string
                  description: 新規作成するカテゴリのタイトル
                  example: TODO
              required:
                - category_title
      responses:
        "201":
          description: Successfully create a new category
          content:
            application/json:
              schema:
                $ref: "./entity/category.yml"
        default:
          $ref: "./errors/unexpected.yml"
  /categories/{category_id}:
    put:
      summary: カテゴリタイトルを更新するエンドポイント
      description: |-
        ## 概要
        - カテゴリのタイトルを受け取り、更新したカテゴリ情報を返す
      tags:
        - categories
      operationId: updateCategory
      security: []
      requestBody:
        description: 更新するカテゴリ
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_title:
                  type: string
                  description: 更新するカテゴリのタイトル
                  example: TODO
              required:
                - category_title
      responses:
        "200":
          description: Successfully update a category
          content:
            application/json:
              schema:
                $ref: "./entity/category.yml"
        default:
          $ref: "./errors/unexpected.yml"
    delete:
      summary: カテゴリを削除するエンドポイント
      description: |-
        ## 概要
        - カテゴリIDを受け取り、カテゴリを削除する
      tags:
        - categories
      operationId: deleteCategory
      security: []
      responses:
        "204":
          description: Successfully delete a category
        default:
          $ref: "./errors/unexpected.yml"
  /items/{category_id}:
    get:
      summary: カテゴリ内のアイテム一覧を取得するエンドポイント
      description: |-
        ## 概要
        - 特定のカテゴリ内のアイテム一覧を取得する
      tags:
        - items
      operationId: getItems
      security: []
      responses:
        "200":
          description: 特定のカテゴリ内のアイテムを全て返す
          content:
            application/json:
              schema:
                $ref: "./responses/items.yml"
        default:
          $ref: "./errors/unexpected.yml"
